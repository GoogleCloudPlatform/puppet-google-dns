# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by puppet-codegen and manual
#     changes will be clobbered when the file is regenerated.
#
# ----------------------------------------------------------------------------

# An example Puppet manifest that creates a Google Cloud Computing DNS Managed
# Zone in a project.

# Defines a credential to be used when communicating with Google Cloud
# Platform. The title of this credential is then used as the 'credential'
# parameter in the gdns_managed_zone type.
#
# For more information on the gauth_credential parameters and providers please
# refer to its detailed documentation at:
#
# TODO(nelsonjr): Add link to documentation on Puppet Forge / Github
# ________________________
#
# For the sake of this example we set the parameter 'path' to point to the file
# that contains your credential in JSON format. And for convenience this example
# allows a variable named $cred_path to be provided to it. If running from the
# command line you can pass it via Facter:
#
#   FACTER_cred_path=/path/to/my/cred.json \
#       puppet apply examples/examples/managed_zone.pp.pp
#
# For convenience you optionally can add it to your ~/.bash_profile (or the
# respective .profile settings) environment:
#
#   export FACTER_cred_path=/path/to/my/cred.json
#
gauth_credential { 'mycred':
  path     => $cred_path, # e.g. '/home/nelsonjr/my_account.json'
  provider => serviceaccount,
  scopes   => [
    'https://www.googleapis.com/auth/ndev.clouddns.readwrite',
  ],
}

# Ensures a managed zone exists and has the correct values.
#
gdns_managed_zone { 'test-example-zone':
  ensure      => present,
  dns_name    => 'test.somewild-example.com.',
  description => 'Test Example Zone',

  # You can also set output-only values as well. Puppet will ignore the values
  # when creating the resource, but will assert that its value matches what you
  # specified.
  #
  # This important to ensure that, for example, the top-level registrar is using
  # the correct DNS server names. Although this can cause failures in a run from
  # a clean project, it is useful to ensure that there are no mismatches in the
  # different services.
  #
  # id            => 8550163345207615620,
  # name_servers  => [
  #   'ns-cloud-a1.googledomains.com.',
  #   'ns-cloud-a2.googledomains.com.',
  #   'ns-cloud-a3.googledomains.com.',
  #   'ns-cloud-a4.googledomains.com.',
  # ],
  # creation_time => '2016-12-02T04:59:24.333Z',

  project     => 'google.com:graphite-playground',
  credential  => 'mycred',
}

# Ensures a managed zone exists and has the correct values.
gdns_managed_zone { 'testzone-2-com':
  ensure     => absent,
  project    => 'google.com:graphite-playground',
  credential => 'mycred',
}

# Ensures a managed zone exists and has the correct values.
gdns_managed_zone { 'id-for-testzone-3-com':
  ensure      => present,
  name        => 'testzone-3-com',
  dns_name    => 'test.somewild-example.com.',
  description => 'Test Example Zone',
  project     => 'google.com:graphite-playground',
  credential  => 'mycred',
}
